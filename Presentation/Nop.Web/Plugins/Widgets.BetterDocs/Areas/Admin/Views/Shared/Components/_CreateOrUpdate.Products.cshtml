@model DocumentModel

@if (Model.Id > 0)
{
    <div class="card-body">
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "products-grid",
            UrlRead = new DataUrl("ProductList", "BetterDocs", new RouteValueDictionary { [nameof(Model.DocumentMappingSearchModel.DocumentId)] = Model.DocumentMappingSearchModel.DocumentId }),
            UrlDelete = new DataUrl("ProductDelete", "BetterDocs", null),
            UrlUpdate = new DataUrl("ProductUpdate", "BetterDocs", null),
            Length = Model.DocumentMappingSearchModel.PageSize,
            LengthMenu = Model.DocumentMappingSearchModel.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(DocumentMappingModel.ProductName))
                    {
                        Title = T("Admin.Catalog.Products.Fields.Name").Text
                    },
                    new ColumnProperty(nameof(DocumentMappingModel.DisplayOrder))
                    {
                        Title = T("Admin.Catalog.Products.Fields.DisplayOrder").Text,
                        Width = "150",
                        ClassName = NopColumnClassDefaults.CenterAll,
                        Editable = true,
                        EditType = EditType.Number
                    },
                    new ColumnProperty(nameof(DocumentMappingModel.EntityId))
                    {
                        Title = T("Admin.Common.View").Text,
                        Width = "150",
                        ClassName = NopColumnClassDefaults.Button,
                        Render = new RenderButtonView(new DataUrl("~/Admin/Product/Edit/", nameof(DocumentMappingModel.EntityId)))
                    },
                    new ColumnProperty(nameof(DocumentMappingModel.Id))
                    {
                        Title = T("Admin.Common.Edit").Text,
                        Width = "200",
                        ClassName =  NopColumnClassDefaults.Button,
                        Render = new RenderButtonsInlineEdit()
                    },
                    new ColumnProperty(nameof(DocumentMappingModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "100",
                        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                        ClassName = NopColumnClassDefaults.Button
                    }
                }
        })
    </div>
    <div class="card-footer">
        <button type="submit" id="btnAddNewProduct"
                onclick="javascript:OpenWindow('@(Url.Action("ProductAddPopup", "BetterDocs", new { documentId = Model.Id, btnId = "btnRefreshProducts", formId = "document-form" }))', 800, 800, true); return false;"
                class="btn btn-primary">
            @T("Admin.Common.AddNew")
        </button>
        <button type="submit" id="btnRefreshProducts" style="display: none"></button>
        <script>
            $(document).ready(function () {
                $('#btnRefreshProducts').click(function () {
                    updateTable('#products-grid');

                    return false;
                });
            });
        </script>
    </div>
}
else
{
    <div class="card-body">
        @T("Plugins.Widgets.BetterDocs.Admin.Fields.SaveBeforeEdit")
    </div>
}

